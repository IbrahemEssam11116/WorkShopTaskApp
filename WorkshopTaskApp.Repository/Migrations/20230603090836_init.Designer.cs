// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using WorkshopTaskApp.Repository.Data;

#nullable disable

namespace WorkshopTaskApp.Repository.Migrations
{
    [DbContext(typeof(DataContext))]
    [Migration("20230603090836_init")]
    partial class init
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.5")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("WorkshopTaskApp.Entity.Models.Category", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Categories");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "TVs"
                        },
                        new
                        {
                            Id = 2,
                            Name = "LapTops"
                        },
                        new
                        {
                            Id = 3,
                            Name = "Sound Systems"
                        });
                });

            modelBuilder.Entity("WorkshopTaskApp.Entity.Models.Product", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("CategoryId")
                        .HasColumnType("int");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Discount")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<double>("Price")
                        .HasColumnType("float");

                    b.Property<int>("Quantity")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("CategoryId");

                    b.ToTable("Products");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CategoryId = 2,
                            Description = "New laptop from Dell Ram 16, Core I7",
                            Discount = 0,
                            Name = "Lab Top Dell",
                            Price = 32000.0,
                            Quantity = 2
                        },
                        new
                        {
                            Id = 2,
                            CategoryId = 1,
                            Description = "4k tv with the Best Sale",
                            Discount = 2,
                            Name = "TV Lg I5033233",
                            Price = 10000.0,
                            Quantity = 5
                        },
                        new
                        {
                            Id = 3,
                            CategoryId = 3,
                            Description = "Speaker Blue Tooth Wireless -model GT 112 - Color Black",
                            Discount = 7,
                            Name = "Speaker Blue ",
                            Price = 1000.0,
                            Quantity = 20
                        },
                        new
                        {
                            Id = 4,
                            CategoryId = 2,
                            Description = ", Ryzen 7-5700u, 8GB, 512 SSD, 15.6",
                            Discount = 2,
                            Name = "HP 15s-eq2009ne ",
                            Price = 20000.0,
                            Quantity = 7
                        },
                        new
                        {
                            Id = 5,
                            CategoryId = 3,
                            Description = "Speaker Blue new Genereation Tooth Wireless -model GT 112 - Color Black",
                            Discount = 7,
                            Name = "Speaker Blue2 ",
                            Price = 1250.0,
                            Quantity = 20
                        },
                        new
                        {
                            Id = 36,
                            CategoryId = 3,
                            Description = "Speaker Blue Old Generation Tooth Wireless -model GT 112 - Color Black",
                            Discount = 10,
                            Name = "Speaker Blue 3",
                            Price = 750.0,
                            Quantity = 20
                        });
                });

            modelBuilder.Entity("WorkshopTaskApp.Entity.Models.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Phone")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Role")
                        .HasColumnType("int");

                    b.Property<string>("UserName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Users");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Address = "Cairo",
                            CreatedAt = new DateTime(2023, 6, 3, 12, 8, 36, 400, DateTimeKind.Local).AddTicks(5509),
                            Email = "admin@gmail.com",
                            FirstName = "admin",
                            LastName = "admin",
                            Password = "admin",
                            Phone = "01120472668",
                            Role = 0,
                            UserName = "admin"
                        });
                });

            modelBuilder.Entity("WorkshopTaskApp.Entity.Models.UserOrder", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("OrderedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Phone")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("ProductId")
                        .HasColumnType("int");

                    b.Property<int>("Quantity")
                        .HasColumnType("int");

                    b.Property<double>("TotalPrice")
                        .HasColumnType("float");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ProductId");

                    b.HasIndex("UserId");

                    b.ToTable("UserProducts");
                });

            modelBuilder.Entity("WorkshopTaskApp.Entity.Models.Product", b =>
                {
                    b.HasOne("WorkshopTaskApp.Entity.Models.Category", "Category")
                        .WithMany("Products")
                        .HasForeignKey("CategoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Category");
                });

            modelBuilder.Entity("WorkshopTaskApp.Entity.Models.UserOrder", b =>
                {
                    b.HasOne("WorkshopTaskApp.Entity.Models.Product", "Product")
                        .WithMany("UserOrder")
                        .HasForeignKey("ProductId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("WorkshopTaskApp.Entity.Models.User", "User")
                        .WithMany("UserProducts")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Product");

                    b.Navigation("User");
                });

            modelBuilder.Entity("WorkshopTaskApp.Entity.Models.Category", b =>
                {
                    b.Navigation("Products");
                });

            modelBuilder.Entity("WorkshopTaskApp.Entity.Models.Product", b =>
                {
                    b.Navigation("UserOrder");
                });

            modelBuilder.Entity("WorkshopTaskApp.Entity.Models.User", b =>
                {
                    b.Navigation("UserProducts");
                });
#pragma warning restore 612, 618
        }
    }
}
